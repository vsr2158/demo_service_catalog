AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC template for simulated on-prem environment. "
Parameters:

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  SshAccessCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR range permitted to SSH into the Bastion host.
    Type: String
    Default: 0.0.0.0/0
  SshInstanceType:
    AllowedValues:
    - t2.nano
    - t2.micro
    - t3.nano
    - t3.micro
    Default: t2.micro
    Description: Bastion EC2 instance type.
    Type: String

  Vpc:
    Description: VPCId to provision EC2
    Type: String
  Subnet:
    Description: SubnetId to provision EC2
    Type: String


Resources:
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Bastion instances
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshAccessCidr
      Tags:
        - Key: Name
          Value: !Sub "OnPremBastionSecurityGroup-${AWS::StackName}"
      VpcId:
        !Ref Vpc

  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref SshInstanceType
      #KeyName: !Ref SshKeyName
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      SubnetId: !Ref Subnet 

      SourceDestCheck: false



Outputs:
  BastionHost:
    Value: !Ref BastionHost
  BastionSecurityGroup:
    Value: !Ref BastionSecurityGroup

